document.addEventListener("DOMContentLoaded",function(){document.getElementById("hamburger").addEventListener("click",function(){e.classList.contains("open")||e.classList.add("open")});const e=document.getElementById("menubar");document.getElementById("close-burger").addEventListener("click",function(){e.classList.remove("open")})});var path=window.location.pathname,page=path.split("/").pop();if("index.html"!=page)var audio=new Audio("../Multimedia/sound/10th_Anniversary.mp3"),on="../Multimedia/sound/on.svg",off="../Multimedia/sound/off.svg";document.addEventListener("DOMContentLoaded",function(){let e=document.querySelector(".speaker");e.addEventListener("click",function(){audio.paused?(e.setAttribute("src",on),audio.play()):(e.setAttribute("src",off),audio.pause())})}),document.addEventListener("DOMContentLoaded",function(){let e=[],t=[];function n(e){let t=e.length;for(;t>0;){let n=Math.floor(Math.random()*t),o=e[--t];e[t]=e[n],e[n]=o}return e}let o=[],i=[],l=[],a=[],u=document.querySelector("#form");function c(){e=n(t);for(let t=0;t<e.length;t++){sq=e[t];let l="<legend>"+sq.question+"</legend>",a='<label for="choice1_'+t+'">'+sq.choice1+'</label><input type="radio" name="question'+t+'" id="choice1_'+t+'" value="ch1"><br>';o.push(a);let c='<label for="choice2_'+t+'">'+sq.choice2+'</label><input type="radio" name="question'+t+'" id="choice2_'+t+'" value="ch2"><br>';o.push(c);let s='<label for="choice3_'+t+'">'+sq.choice3+'</label><input type="radio" name="question'+t+'" id="choice3_'+t+'" value="ch3"><br>';o.push(s);let d='<label for="choice4_'+t+'">'+sq.choice4+'</label><input type="radio" name="question'+t+'" id="choice4_'+t+'" value="ch4"><br>';o.push(d),a=(i=n(o))[0],c=i[1],s=i[2],d=i[3],questionField=document.createElement("fieldset"),questionField.classList.add("quizfield"),questionField.classList.add("question"+t),questionField.innerHTML=l+a+c+s+d,u.appendChild(questionField),o=[],i=[]}let c=document.createElement("input");c.type="submit",c.name="submit",c.value="Submit",c.classList.add("coolbutton"),u.appendChild(c),c.addEventListener("click",function(){let n=0;for(var o=0;o<e.length;o++)l[o]=document.querySelector("input[name=question"+o+"]:checked"),l[o]&&(a[o]=document.querySelector("label[for="+l[o].id+"]"),a[o].innerText==t[o].answer?(a[o].style.color="green",n++):a[o].style.color="red");document.getElementById("quiz-content").innerText="You got "+n+" out of the "+e.length+" questions right!";let i=document.querySelector(".quiz-reset");i.value=6===n?"Cool!":"Maybe try again?",s.style.display="block",function(e,t){e.style.opacity=0;var n=+new Date,o=function(){e.style.opacity=+e.style.opacity+(new Date-n)/t,n=+new Date,+e.style.opacity<1&&(window.requestAnimationFrame&&requestAnimationFrame(o)||setTimeout(o,16))};o()}(s,50)})}let s=document.querySelector(".popup");document.querySelector(".popup-close").addEventListener("click",function(e){s.style.display="none",e.preventDefault()}),document.querySelector(".quiz-reset").addEventListener("click",function(e){s.style.display="none",u.innerHTML="",c(),e.preventDefault()}),function(e){let t=new XMLHttpRequest;t.overrideMimeType("application/json"),t.open("GET","../data/quizQuestions.json",!0),t.onreadystatechange=function(){4==t.readyState&&"200"==t.status&&e(t.responseText)},t.send(null)}(function(e){t=JSON.parse(e),c()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

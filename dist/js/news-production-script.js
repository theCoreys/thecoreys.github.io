document.addEventListener("DOMContentLoaded",function(){document.getElementById("hamburger").addEventListener("click",function(){e.classList.contains("open")||e.classList.add("open")});const e=document.getElementById("menubar");document.getElementById("close-burger").addEventListener("click",function(){e.classList.remove("open")})});var path=window.location.pathname,page=path.split("/").pop();if("index.html"!=page)var audio=new Audio("../Multimedia/sound/10th_Anniversary.mp3"),on="../Multimedia/sound/on.svg",off="../Multimedia/sound/off.svg";document.addEventListener("DOMContentLoaded",function(){let e=document.querySelector(".speaker");e.addEventListener("click",function(){audio.paused?(e.setAttribute("src",on),audio.play()):(e.setAttribute("src",off),audio.pause())})});let map,liveTitle="not set",date="not set",address="not set";function loadJSON(e){let t=new XMLHttpRequest;t.overrideMimeType("application/json"),t.open("GET","../data/liveNews.json",!0),t.onreadystatechange=function(){4==t.readyState&&"200"==t.status&&e(t.responseText)},t.send(null)}loadJSON(function(e){let t=JSON.parse(e),o=document.getElementById("live-list");for(i=0;i<t.length;i++){let e,n=document.createElement("li");n.className="linews",e=""==t[i].link?t[i].name:'<a href="'+t[i].link+'" class="list-link">'+t[i].name+"</a>",n.innerHTML=t[i].date+" - "+e+" - "+t[i].address,o.appendChild(n)}liveTitle=t[t.length-1].name,console.log(liveTitle),date=t[t.length-1].date,address=t[t.length-1].address});let liveLatLng,markers=[];function initMap(){let e=new google.maps.Map(document.getElementById("map"),{zoom:7,center:{lat:38.1288327,lng:22.2382471}});geocodeAddress(new google.maps.Geocoder,e,address),console.log("The lat-lng format taken from the geocodeAddress() func is:"+liveLatLng);let t=new google.maps.Marker({position:liveLatLng,map:e,title:title,animation:google.maps.Animation.DROP}),o=new google.maps.InfoWindow;t.addListener("click",function(){!function(t,o){if(o.marker!=t){o.marker=t,o.addListener("closeclick",function(){o.marker=null});let n=150;(new google.maps.StreetViewService).getPanoramaByLocation(t.position,n,function(e,n){if(n==google.maps.StreetViewStatus.OK){let n=e.location.latLng,i=google.maps.geometry.spherical.computeHeading(n,t.position);o.setContent("<div>"+t.title+'</div><div id="pano"></div>');let a={position:n,pov:{heading:i,pitch:30}},s=new google.maps.StreetViewPanorama(document.getElementById("pano"),a);console.log(s)}else o.setContent("<div>"+t.title+"</div><div>No Street View Found</div>")}),o.open(e,t)}}(this,o)})}function geocodeAddress(e,t,o){e.geocode({address:o},function(e,o){o===google.maps.GeocoderStatus.OK?(t.setCenter(e[0].geometry.location),console.log("The Formatted Address is:"+e[0].formatted_address),console.log("The Location is"+e[0].geometry.location),liveLatLng=e[0].geometry.location):alert("Geocode was not successful for the following reason: "+o)})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuanMiLCJjb250ZW50TXVzaWNQbGF5ZXIuanMiLCJuZXdzLmpzIl0sIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldEVsZW1lbnRCeUlkIiwibWVudSIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiYWRkIiwicmVtb3ZlIiwicGF0aCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJwYWdlIiwic3BsaXQiLCJwb3AiLCJhdWRpbyIsIkF1ZGlvIiwib24iLCJvZmYiLCJzcGVha2VyIiwicXVlcnlTZWxlY3RvciIsInBhdXNlZCIsInNldEF0dHJpYnV0ZSIsInBsYXkiLCJwYXVzZSIsIm1hcCIsImxpdmVUaXRsZSIsImRhdGUiLCJhZGRyZXNzIiwibG9hZEpTT04iLCJjYWxsYmFjayIsInhvYmoiLCJYTUxIdHRwUmVxdWVzdCIsIm92ZXJyaWRlTWltZVR5cGUiLCJvcGVuIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3BvbnNlVGV4dCIsInNlbmQiLCJyZXNwb25zZSIsImxpdmVEYXRhIiwiSlNPTiIsInBhcnNlIiwibGlzdCIsImkiLCJsZW5ndGgiLCJsaXN0TGluayIsImxpc3RJdGVtIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImxpbmsiLCJuYW1lIiwiaW5uZXJIVE1MIiwiYXBwZW5kQ2hpbGQiLCJjb25zb2xlIiwibG9nIiwibGl2ZUxhdExuZyIsIm1hcmtlcnMiLCJpbml0TWFwIiwiZ29vZ2xlIiwibWFwcyIsIk1hcCIsInpvb20iLCJjZW50ZXIiLCJsYXQiLCJsbmciLCJnZW9jb2RlQWRkcmVzcyIsIkdlb2NvZGVyIiwibWFya2VyIiwiTWFya2VyIiwicG9zaXRpb24iLCJ0aXRsZSIsImFuaW1hdGlvbiIsIkFuaW1hdGlvbiIsIkRST1AiLCJsYXJnZUluZm93aW5kb3ciLCJJbmZvV2luZG93IiwiYWRkTGlzdGVuZXIiLCJpbmZvd2luZG93IiwicmFkaXVzIiwiU3RyZWV0Vmlld1NlcnZpY2UiLCJnZXRQYW5vcmFtYUJ5TG9jYXRpb24iLCJkYXRhIiwiU3RyZWV0Vmlld1N0YXR1cyIsIk9LIiwibmVhclN0cmVldFZpZXdMb2NhdGlvbiIsImxhdExuZyIsImhlYWRpbmciLCJnZW9tZXRyeSIsInNwaGVyaWNhbCIsImNvbXB1dGVIZWFkaW5nIiwic2V0Q29udGVudCIsInBhbm9yYW1hT3B0aW9ucyIsInBvdiIsInBpdGNoIiwicGFub3JhbWEiLCJTdHJlZXRWaWV3UGFub3JhbWEiLCJwb3B1bGF0ZUluZm9XaW5kb3ciLCJ0aGlzIiwiZ2VvY29kZXIiLCJyZXN1bHRzTWFwIiwiZ2VvY29kZSIsInJlc3VsdHMiLCJHZW9jb2RlclN0YXR1cyIsInNldENlbnRlciIsImZvcm1hdHRlZF9hZGRyZXNzIiwiYWxlcnQiXSwibWFwcGluZ3MiOiJBQUFBQSxTQUFTQyxpQkFBaUIsbUJBQW9CLFdBQzdCRCxTQUFTRSxlQUFlLGFBQzlCRCxpQkFBaUIsUUFBUyxXQVF4QkUsRUFBS0MsVUFBVUMsU0FBUyxTQUN6QkYsRUFBS0MsVUFBVUUsSUFBSSxVQUwzQixNQUFNSCxFQUFPSCxTQUFTRSxlQUFlLFdBU3ZCRixTQUFTRSxlQUFlLGdCQUNoQ0QsaUJBQWlCLFFBQVMsV0FDNUJFLEVBQUtDLFVBQVVHLE9BQU8sWUNoQjlCLElBQUlDLEtBQU9DLE9BQU9DLFNBQVNDLFNBQ3ZCQyxLQUFPSixLQUFLSyxNQUFNLEtBQUtDLE1BRTNCLEdBQVMsY0FBTkYsS0FDQyxJQUFJRyxNQUFRLElBQUlDLE1BQU0sNENBQ2xCQyxHQUFLLDZCQUNMQyxJQUFNLDhCQUVkbEIsU0FBU0MsaUJBQWlCLG1CQUFvQixXQUUxQyxJQUFJa0IsRUFBVW5CLFNBQVNvQixjQUFjLFlBQ3JDRCxFQUFRbEIsaUJBQWlCLFFBQVMsV0FDMUJjLE1BQU1NLFFBQ05GLEVBQVFHLGFBQWEsTUFBT0wsSUFDNUJGLE1BQU1RLFNBRU5KLEVBQVFHLGFBQWEsTUFBT0osS0FDNUJILE1BQU1TLGFDakJsQixJQTZES0MsSUE3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QWVuQixJQUN0Q2dCLEVBQVdJLFVBQVVGLEVBQVEsR0FBR2QsU0FBUy9FLFVBRXpDNkMsUUFBUUMsSUFBSSw0QkFBOEIrQyxFQUFRLEdBQUdHLG1CQUNyRG5ELFFBQVFDLElBQUksa0JBQW9CK0MsRUFBUSxHQUFHZCxTQUFTL0UsVUFDcEQrQyxXQUFhOEMsRUFBUSxHQUFHZCxTQUFTL0UsVUFFakNpRyxNQUFNLHdEQUEwRHRFIiwiZmlsZSI6Im5ld3MtcHJvZHVjdGlvbi1zY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBsZXQgYnVyZ2VyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hhbWJ1cmdlcicpO1xyXG4gICAgYnVyZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRvZ2dsZUZpbHRlcmluZygpO1xyXG4gICAgfSlcclxuXHJcbiAgICBjb25zdCBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51YmFyXCIpO1xyXG5cclxuICAgIGZ1bmN0aW9uIHRvZ2dsZUZpbHRlcmluZygpIHtcclxuICAgICAgICAvL0lmIG9wZW4gY2xvc2UgaXQsIGlmIGNsb3NlZCBvcGVuIGl0LlxyXG4gICAgICAgIGlmICghbWVudS5jbGFzc0xpc3QuY29udGFpbnMoJ29wZW4nKSkge1xyXG4gICAgICAgICAgICBtZW51LmNsYXNzTGlzdC5hZGQoJ29wZW4nKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZW1wdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNsb3NlLWJ1cmdlclwiKTtcclxuICAgIGVtcHR5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIG1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpO1xyXG4gICAgfSlcclxufSk7IiwiXHJcbnZhciBwYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xyXG52YXIgcGFnZSA9IHBhdGguc3BsaXQoXCIvXCIpLnBvcCgpO1xyXG5cclxuaWYocGFnZSE9XCJpbmRleC5odG1sXCIpe1xyXG4gICAgdmFyIGF1ZGlvID0gbmV3IEF1ZGlvKCcuLi9NdWx0aW1lZGlhL3NvdW5kLzEwdGhfQW5uaXZlcnNhcnkubXAzJyk7XHJcbiAgICB2YXIgb24gPSBcIi4uL011bHRpbWVkaWEvc291bmQvb24uc3ZnXCI7XHJcbiAgICB2YXIgb2ZmID0gXCIuLi9NdWx0aW1lZGlhL3NvdW5kL29mZi5zdmdcIjtcclxufVxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBcclxuICAgIGxldCBzcGVha2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNwZWFrZXInKTtcclxuICAgIHNwZWFrZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGF1ZGlvLnBhdXNlZCkge1xyXG4gICAgICAgICAgICBzcGVha2VyLnNldEF0dHJpYnV0ZSgnc3JjJywgb24pO1xyXG4gICAgICAgICAgICBhdWRpby5wbGF5KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc3BlYWtlci5zZXRBdHRyaWJ1dGUoJ3NyYycsIG9mZik7XHJcbiAgICAgICAgICAgIGF1ZGlvLnBhdXNlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSk7IiwiLy8gVGhlIGZlYXR1cmVkIGxpdmUncyBuYW1lLlxyXG5sZXQgbGl2ZVRpdGxlID0gXCJub3Qgc2V0XCI7XHJcbi8vIFRoZSBmZWF0dXJlZCBsaXZlJ3MgZGF0ZS5cclxubGV0IGRhdGUgPSBcIm5vdCBzZXRcIjtcclxuLy8gVGhlIGZlYXR1cmVkIGxpdmUncyBhZGRyZXNzLlxyXG5sZXQgYWRkcmVzcyA9IFwibm90IHNldFwiO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBhIFhNTEh0dHBSZXF1ZXN0IGFuZCBsb2FkIGFzeW5jaHJvbm91c2x5IHRoZSBjb250ZW50cyBvZiBsaXZlTmV3cy5qc29uLlxyXG4gKiBAcGFyYW0geyp9IGNhbGxiYWNrIFxyXG4gKi9cclxuZnVuY3Rpb24gbG9hZEpTT04oY2FsbGJhY2spIHtcclxuXHJcbiAgICBsZXQgeG9iaiA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgeG9iai5vdmVycmlkZU1pbWVUeXBlKFwiYXBwbGljYXRpb24vanNvblwiKTtcclxuICAgIHhvYmoub3BlbignR0VUJywgJy4uL2RhdGEvbGl2ZU5ld3MuanNvbicsIHRydWUpO1xyXG4gICAgeG9iai5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHhvYmoucmVhZHlTdGF0ZSA9PSA0ICYmIHhvYmouc3RhdHVzID09IFwiMjAwXCIpIHtcclxuICAgICAgICAgICAgLy8gUmVxdWlyZWQgdXNlIG9mIGFuIGFub255bW91cyBjYWxsYmFjayBhcyAub3BlbiB3aWxsIE5PVCByZXR1cm4gYSB2YWx1ZSBidXQgc2ltcGx5IHJldHVybnMgdW5kZWZpbmVkIGluIGFzeW5jaHJvbm91cyBtb2RlLlxyXG4gICAgICAgICAgICBjYWxsYmFjayh4b2JqLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHhvYmouc2VuZChudWxsKTtcclxufVxyXG5cclxuXHJcbi8vQSBzY3JpcHQgdG8gZmV0Y2ggdGhlIHF1aXogcXVlc3Rpb25zIGZyb20gdGhlIGpzb24gZmlsZSwgc2h1ZmxsZSB0aGVtLCBhZGQgdGhlbSBvbmUgYnkgb25lIHRvIHRoZSBkb20sIGJ5IGxpc3RlbmluZyB0byB0aGUgc3VibWl0IGV2ZW50IHRoZSBzdWJtaXQgZXZlbnQgb2YgdGhlIHByZXZpb3VzIG9uZS5cclxubG9hZEpTT04oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAvLyBQYXJzZSBKU09OIHN0cmluZyBpbnRvIG9iamVjdFxyXG4gICAgbGV0IGxpdmVEYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZSk7XHJcbiAgICAvLyBTZWxlY3QgdGhlIHVuc29ydGVkIGxpc3QgaW4gd2hpY2ggdGhlIGxpdmUgZGF0YSB3aWxsIGJlIGFwcGVuZGVkIHRvLlxyXG4gICAgbGV0IGxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpdmUtbGlzdFwiKTtcclxuXHJcbiAgICBmb3IoaT0wOyBpPGxpdmVEYXRhLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAvLyBDcmVhdGUgYSBsaXN0IGl0ZW0gZm9yIGEgbGl2ZSBzaG93LlxyXG4gICAgICAgIGxldCBsaXN0SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgbGlzdEl0ZW0uY2xhc3NOYW1lPSdsaW5ld3MnO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIENyZWF0ZSB0aGUgbGluayB0byB0aGUgbGl2ZSdzIHBhZ2UuXHJcbiAgICAgICAgbGV0IGxpc3RMaW5rXHJcbiAgICAgICAgaWYobGl2ZURhdGFbaV0ubGluaz09XCJcIil7XHJcbiAgICAgICAgICAgIGxpc3RMaW5rID0gbGl2ZURhdGFbaV0ubmFtZTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgbGlzdExpbmsgPSAnPGEgaHJlZj1cIicrbGl2ZURhdGFbaV0ubGluaysnXCIgY2xhc3M9XCJsaXN0LWxpbmtcIj4nK2xpdmVEYXRhW2ldLm5hbWUrJzwvYT4nO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGlzdEl0ZW0uaW5uZXJIVE1MPWxpdmVEYXRhW2ldLmRhdGUrXCIgLSBcIitsaXN0TGluaytcIiAtIFwiK2xpdmVEYXRhW2ldLmFkZHJlc3M7XHJcbiAgICAgICAgbGlzdC5hcHBlbmRDaGlsZChsaXN0SXRlbSk7XHJcblxyXG4gICAgfVxyXG4gICAgLy8gR2V0IHRoZSBsYXRlc3QgbGl2ZSdzIHRpdGxlLlxyXG4gICAgbGl2ZVRpdGxlPWxpdmVEYXRhW2xpdmVEYXRhLmxlbmd0aC0xXS5uYW1lO1xyXG4gICAgY29uc29sZS5sb2cobGl2ZVRpdGxlKTtcclxuICAgIC8vIEdldCB0aGUgbGF0ZXN0IGxpdmUncyBkYXRlLlxyXG4gICAgZGF0ZT1saXZlRGF0YVtsaXZlRGF0YS5sZW5ndGgtMV0uZGF0ZTtcclxuICAgIC8vIEdldCB0aGUgbGF0ZXN0IGxpdmUncyBhZGRyZXNzLlxyXG4gICAgYWRkcmVzcz1saXZlRGF0YVtsaXZlRGF0YS5sZW5ndGgtMV0uYWRkcmVzcztcclxufSk7XHJcblxyXG5cclxuLyogR29vZ2xlIG1hcHMgbm93IFJFUVVJUkVTIGEgY3JlZGl0IGNhcmQgYW5kIHdpbGwgd29yayBvbmx5IGZvciBmcmVlIG9ubHkgZm9yIHRoZSBmaXJzdCAkMjAwIG1vbnRobHkgY3JlZGl0LlxyXG4gQWZ0ZXIgdGhhdCB5b3UgcGF5IG9yIHdhaXQgdGlsbCBuZXh0IG1vbnRoLiAqL1xyXG4gbGV0IG1hcDtcclxuXHJcbiAvLyBDcmVhdGUgYSBuZXcgYmxhbmsgYXJyYXkgZm9yIGFsbCB0aGUgbGlzdGluZyBtYXJrZXJzLlxyXG4gbGV0IG1hcmtlcnMgPSBbXTtcclxuIGxldCBsaXZlTGF0TG5nOyAvLyBVc2VkIHRvIHN0b3JlIHRoZSBsYXQtbG5nIG9mIHRoZSBsaXZlJ3MgbG9jYXRpb24uXHJcbiBcclxuZnVuY3Rpb24gaW5pdE1hcCgpIHtcclxuXHJcbiAgICBsZXQgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHtcclxuICAgICAgICB6b29tOiA3LFxyXG4gICAgICAgIGNlbnRlcjoge1xyXG4gICAgICAgICAgICBsYXQ6IDM4LjEyODgzMjcsXHJcbiAgICAgICAgICAgIGxuZzogMjIuMjM4MjQ3MVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgbGV0IGdlb2NvZGVyID0gbmV3IGdvb2dsZS5tYXBzLkdlb2NvZGVyKCk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgLy8gR2VvY29kZSBnaXZlbiBhZGRyZXNzIGFuZCBzZXQgaXQgdG8gdGhlIGxpdmVMYXRMbmcgcGFyYW1ldGVyLlxyXG4gICAgZ2VvY29kZUFkZHJlc3MoZ2VvY29kZXIsIG1hcCwgYWRkcmVzcyk7XHJcbiAgICBjb25zb2xlLmxvZygnVGhlIGxhdC1sbmcgZm9ybWF0IHRha2VuIGZyb20gdGhlIGdlb2NvZGVBZGRyZXNzKCkgZnVuYyBpczonICsgbGl2ZUxhdExuZyk7XHJcblxyXG4gICAgLy8gQ3JlYXRlIGEgc2luZ2xlIG1hcmtlciBmb3IgdGhlIGxhdGVzdCBsaXZlJ3MgbG9jYXRpb24gb24gaW5pdGlhbGl6ZS5cclxuICAgIGxldCBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcclxuICAgICAgICBwb3NpdGlvbjogbGl2ZUxhdExuZyxcclxuICAgICAgICBtYXA6IG1hcCxcclxuICAgICAgICB0aXRsZTogdGl0bGUsXHJcbiAgICAgICAgYW5pbWF0aW9uOiBnb29nbGUubWFwcy5BbmltYXRpb24uRFJPUCxcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIENyZWF0ZSBhIHNpbmdsZSBpbmZvd2luZG93IHRoYXQgd2lsbCBhcHBlYXIgb24gdGhlIG1hcmtlci5cclxuICAgIGxldCBsYXJnZUluZm93aW5kb3cgPSBuZXcgZ29vZ2xlLm1hcHMuSW5mb1dpbmRvdygpO1xyXG5cclxuICAgIC8vIFRoaXMgZnVuY3Rpb24gcG9wdWxhdGVzIHRoZSBpbmZvd2luZG93IHdoZW4gdGhlIG1hcmtlciBpcyBjbGlja2VkLlxyXG4gICAgZnVuY3Rpb24gcG9wdWxhdGVJbmZvV2luZG93KG1hcmtlciwgaW5mb3dpbmRvdykge1xyXG4gICAgICAgIC8vIENoZWNrIHRvIG1ha2Ugc3VyZSB0aGUgaW5mb3dpbmRvdyBpcyBub3QgYWxyZWFkeSBvcGVuZWQgb24gdGhpcyBtYXJrZXIuXHJcbiAgICAgICAgaWYgKGluZm93aW5kb3cubWFya2VyICE9IG1hcmtlcikge1xyXG4gICAgICAgICAgICAvLyBDbGVhciB0aGUgaW5mb3dpbmRvdyBjb250ZW50IHRvIGdpdmUgdGhlIHN0cmVldHZpZXcgdGltZSB0byBsb2FkLlxyXG4gICAgICAgICAgICAvL2luZm93aW5kb3cuc2V0Q29udGVudCgnJyk7XHJcbiAgICAgICAgICAgIGluZm93aW5kb3cubWFya2VyID0gbWFya2VyO1xyXG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhlIG1hcmtlciBwcm9wZXJ0eSBpcyBjbGVhcmVkIGlmIHRoZSBpbmZvd2luZG93IGlzIGNsb3NlZC5cclxuICAgICAgICAgICAgaW5mb3dpbmRvdy5hZGRMaXN0ZW5lcignY2xvc2VjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGluZm93aW5kb3cubWFya2VyID0gbnVsbDtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGxldCBzdHJlZXRWaWV3U2VydmljZSA9IG5ldyBnb29nbGUubWFwcy5TdHJlZXRWaWV3U2VydmljZSgpO1xyXG4gICAgICAgICAgICBsZXQgcmFkaXVzID0gMTUwO1xyXG4gICAgICAgICAgICAvLyBJbiBjYXNlIHRoZSBzdGF0dXMgaXMgT0ssIHdoaWNoIG1lYW5zIHRoZSBwYW5vIHdhcyBmb3VuZCwgY29tcHV0ZSB0aGVcclxuICAgICAgICAgICAgLy8gcG9zaXRpb24gb2YgdGhlIHN0cmVldHZpZXcgaW1hZ2UsIHRoZW4gY2FsY3VsYXRlIHRoZSBoZWFkaW5nLCB0aGVuIGdldCBhXHJcbiAgICAgICAgICAgIC8vIHBhbm9yYW1hIGZyb20gdGhhdCBhbmQgc2V0IHRoZSBvcHRpb25zXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldFN0cmVldFZpZXcoZGF0YSwgc3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09IGdvb2dsZS5tYXBzLlN0cmVldFZpZXdTdGF0dXMuT0spIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgbmVhclN0cmVldFZpZXdMb2NhdGlvbiA9IGRhdGEubG9jYXRpb24ubGF0TG5nO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBsZXQgaGVhZGluZyA9IGdvb2dsZS5tYXBzLmdlb21ldHJ5LnNwaGVyaWNhbC5jb21wdXRlSGVhZGluZyhcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmVhclN0cmVldFZpZXdMb2NhdGlvbiwgbWFya2VyLnBvc2l0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBpbmZvd2luZG93LnNldENvbnRlbnQoJzxkaXY+JyArIG1hcmtlci50aXRsZSArICc8L2Rpdj48ZGl2IGlkPVwicGFub1wiPjwvZGl2PicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBwYW5vcmFtYU9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBuZWFyU3RyZWV0Vmlld0xvY2F0aW9uLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3Y6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRpbmc6IGhlYWRpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaXRjaDogMzBcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBhbm9yYW1hID0gbmV3IGdvb2dsZS5tYXBzLlN0cmVldFZpZXdQYW5vcmFtYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFubycpLCBwYW5vcmFtYU9wdGlvbnMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHBhbm9yYW1hKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5mb3dpbmRvdy5zZXRDb250ZW50KCc8ZGl2PicgKyBtYXJrZXIudGl0bGUgKyAnPC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2Pk5vIFN0cmVldCBWaWV3IEZvdW5kPC9kaXY+Jyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gVXNlIHN0cmVldHZpZXcgc2VydmljZSB0byBnZXQgdGhlIGNsb3Nlc3Qgc3RyZWV0dmlldyBpbWFnZSB3aXRoaW5cclxuICAgICAgICAgICAgLy8gNTAgbWV0ZXJzIG9mIHRoZSBtYXJrZXJzIHBvc2l0aW9uXHJcbiAgICAgICAgICAgIHN0cmVldFZpZXdTZXJ2aWNlLmdldFBhbm9yYW1hQnlMb2NhdGlvbihtYXJrZXIucG9zaXRpb24sIHJhZGl1cywgZ2V0U3RyZWV0Vmlldyk7XHJcbiAgICAgICAgICAgIC8vIE9wZW4gdGhlIGluZm93aW5kb3cgb24gdGhlIGNvcnJlY3QgbWFya2VyLlxyXG4gICAgICAgICAgICBpbmZvd2luZG93Lm9wZW4obWFwLCBtYXJrZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyAgY3JlYXRlIGFuIEVWRU5UIExJU1RFTkVSIHNvIHRoYXQgdGhlIGluZm93aW5kb3cgb3BlbnMgd2hlblxyXG4gICAgLy8gdGhlIG1hcmtlciBpcyBjbGlja2VkIVxyXG4gICAgbWFya2VyLmFkZExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwb3B1bGF0ZUluZm9XaW5kb3codGhpcywgbGFyZ2VJbmZvd2luZG93KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZW9jb2RlQWRkcmVzcyhnZW9jb2RlciwgcmVzdWx0c01hcCwgYWRkcmVzcykge1xyXG4gICAgZ2VvY29kZXIuZ2VvY29kZSh7XHJcbiAgICAgICAgJ2FkZHJlc3MnOiBhZGRyZXNzXHJcbiAgICB9LCBmdW5jdGlvbiAocmVzdWx0cywgc3RhdHVzKSB7XHJcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gZ29vZ2xlLm1hcHMuR2VvY29kZXJTdGF0dXMuT0spIHtcclxuICAgICAgICAgICAgcmVzdWx0c01hcC5zZXRDZW50ZXIocmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbik7XHJcbiAgICAgICAgICAgIC8vIFNob3cgdGhlIGZpcnN0IHJlc3VsdCdzIGZvcm1hdHRlZCBhZGRyZXNzLCBhbmQgTE9DQVRJT04uXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVGhlIEZvcm1hdHRlZCBBZGRyZXNzIGlzOlwiICsgcmVzdWx0c1swXS5mb3JtYXR0ZWRfYWRkcmVzcyk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVGhlIExvY2F0aW9uIGlzXCIgKyByZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uKTtcclxuICAgICAgICAgICAgbGl2ZUxhdExuZyA9IHJlc3VsdHNbMF0uZ2VvbWV0cnkubG9jYXRpb247XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYWxlcnQoJ0dlb2NvZGUgd2FzIG5vdCBzdWNjZXNzZnVsIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbjogJyArIHN0YXR1cyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn0iXX0=
